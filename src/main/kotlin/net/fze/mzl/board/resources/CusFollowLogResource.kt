/**
 * this file is auto generated by tto v1.3.10 !
 * if you want to modify this code,please read guide doc
 * and modify code template later.
 *
 * guide please see https://github.com/fzen/tto
 *
 */
package net.fze.mzl.board.resources

import net.fze.mzl.board.pojo.CusFollowLogEntity
import net.fze.mzl.board.service.CusFollowLogService
import com.line.arch.commons.std.Result
import javax.inject.Inject
import javax.ws.rs.*
import javax.ws.rs.core.MediaType

/* ¿Í»§»Ø·Ã¼ÇÂ¼资源 */
@Path("/cus_follow_log")
@Produces(MediaType.APPLICATION_JSON)
@Consumes(MediaType.APPLICATION_JSON)
class CusFollowLogResource {
    @Inject
    private lateinit var service:CusFollowLogService

    @GET
    @Path("/{id}")
    fun get(@PathParam("id") id:Int): CusFollowLogEntity? {
        return service.findByIdOrNull(id)
    }

    @GET
    fun list(): Set<CusFollowLogEntity> {
        return mutableSetOf()
    }

    @POST
    fun save(entity: CusFollowLogEntity):Result {
        val err = this.service.saveCusFollowLog(entity)
        if(err != null)return Result.create(1,err.message)
        return Result.OK
    }

    @DELETE
    @Path("/{id}")
    fun delete(@PathParam("id") id:Int):Result {
        val err = this.service.deleteById(id)
        if(err != null)return Result.create(1,err.message)
        return Result.OK
    }
}